name: build-edge
on:
  workflow_dispatch:
  push:
    branches-ignore:
      - 'main'

jobs:
  test_ci_deploy:
    name: Test, Deploy to Edge (CF + Fastly), Post-Deploy test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Unit Test
        run: npm test && mv coverage/coverage-final.json coverage/coverage-final.json || true

      # Build and deploy via helix-deploy + plugin-edge
      - name: Fastly Build (hedy)
        run: npm run fastly-build
      - name: Fastly Version
        run: npm ls @fastly/js-compute
      - name: Package and Branch Deployment
        if: ${{ env.HLX_FASTLY_CI_ID != '' || secrets.HLX_FASTLY_CI_ID != '' }}
        env:
          HLX_FASTLY_CI_ID: ${{ secrets.HLX_FASTLY_CI_ID }}
          HLX_FASTLY_CI_AUTH: ${{ secrets.HLX_FASTLY_CI_AUTH }}
          HLX_CLOUDFLARE_EMAIL: ${{ secrets.HLX_CLOUDFLARE_EMAIL }}
          HLX_CLOUDFLARE_ACCOUNT: ${{ secrets.HLX_CLOUDFLARE_ACCOUNT }}
          HLX_CLOUDFLARE_AUTH: ${{ secrets.HLX_CLOUDFLARE_AUTH }}
        run: HLX_FASTLY_AUTH=$HLX_FASTLY_CI_AUTH HLX_FASTLY_SVC=$HLX_FASTLY_CI_ID HLX_CLOUDFLARE_NAME=helix-mixer-ci npm run deploy:edge
      - name: List Package Contents
        run: |
          if [ -d bin ]; then
            find bin -maxdepth 2 -type f -print
            if [ -f bin/dist/helix3/fastly-bundle.tar.gz ]; then tar -tvf bin/dist/helix3/fastly-bundle.tar.gz; fi
          fi
      - name: Wait for service to be updated
        run: sleep 45
      - name: Post-Deployment Integration Test
        env:
          TEST_INTEGRATION: true
        run: npm run test-postdeploy

